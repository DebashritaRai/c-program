#include<stdio.h>
#include<stdlib.h>
struct nodetype {
int data;
struct nodetype *next,*prev;
};
int count=0;
typedef struct nodetype node;
node * head= NULL;
node * tail=NULL;
node* createnode()
{
	node* newnode=(node*)malloc(sizeof(node));
	printf("Enter a value\n");
	scanf("%d",&newnode->data);
	newnode->prev=NULL;
	newnode->next=NULL;
	count++;
	return newnode;
}

void createlist()
{
	int n,i;
	printf("enter the initial size of the list:");
	scanf("%d", &n);
	for(i=0;i<n;i++)
	{
		node* newnode=createnode();
		if (head==NULL)
		head=tail=newnode;
		else
		{
			tail->next=newnode;
			newnode->prev=tail;
			tail=newnode;
		}
	}
	printf("\n.....LIST CREATED.....n");
}

void displaylist()
{
	node *temp=head;
	while(temp!=NULL)
	{
		printf("%d\t",temp->data);
		temp=temp->next;
	}
	printf("\ntotal no. of data: %d\n",count);
}

void insertatbeg()
{
	node *newnode=createnode();
	if(head==NULL)
		head=tail=newnode;
	else
	{
		head->prev=newnode;
		newnode->next=head;
		head=newnode;
	}
}
void insertatend()
{
	node *newnode=createnode();
	if (tail==NULL)
		head=tail=newnode;
	else
	{
		tail->next=newnode;
		newnode->prev=tail;
		tail=newnode;
	}
}
void insertatpos()
{
	int pos;
	printf("Enter the position");
	scanf("%d",&pos);
	if(pos>count+1 || pos<=0)
		printf("\n.....INVALID POSITION.....\n");
	else if(pos==1)
		insertatbeg();
	else if(pos==count+1)
		insertatend();
	else{
		node* newnode=createnode();
		node* temp=head; int i=1;
		while(i<pos-1)
		{
			temp=temp->next;
			i++;
		}
		newnode->prev=temp;
		newnode->next=temp->next;
		temp->next=newnode;
		newnode->next->prev=newnode;
	}
}

void delfrombeg()
{
	node *temp;
	if (head==NULL)
		printf(".....EMPTY LIST.....");
	else{
		temp=head;
		head=head->next;
		head->prev=0;
		free(temp);
		count--;
	}
}

void delfromend()
{
	node * temp;
	if(tail==0)	
		printf(".....EMPTY LIST.....");
	else{
		temp=tail;
		tail->prev->next=NULL;
		tail=tail->prev;
		free(temp);
		count--;
	}
}
void delfrompos()
{
	int pos;
	node * temp=head;
	printf("Enter the position");
	scanf("%d",&pos);
	if(pos>count || pos<=0)
		printf("\n.....INVALID POSITION.....\n");
	else if(pos==1)
		delfrombeg();
	else if(pos==count)
		delfromend();
	else
	{
		int i;
		for (i=1;i<pos;i++)
		{
			temp=temp->next;
		}
		temp->prev->next=temp->next;
		temp->next->prev=temp->prev;
		free(temp);
		count--;
	}
}
int main()
{
	node * head=NULL;
	int x,n,pos;
	int choice;
	while(1)
	{
		printf("Enter your option\n");
		printf(" Create list:[1]\t Print List:[2]\n Insert at end:[3]\t Deletion from end:[4]\n Insert at head:[5]\t Deletion from head:[6]\n Insert at POS:[7]\t Deletion from POS: [8]");
		printf("\n Exit from program[9]\n");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1: createlist(); break;
			case 2: displaylist(); break;
			case 3: insertatend(); break;	
			case 4: delfromend(); break;
			case 5: insertatbeg(); break;
			case 6: delfrombeg(); break;
			case 7: insertatpos(); break;
			case 8: delfrompos(); break;
			case 9: exit(0); break;
			default: printf(".....INVALID CHOICE....."); break;
		}
	}
	return 0;
}
